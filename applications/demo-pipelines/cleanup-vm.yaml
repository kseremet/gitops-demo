apiVersion: tekton.dev/v1
kind: Task
metadata:
  annotations:
    delete.params.task.kubevirt.io/type: boolean
    script.params.task.kubevirt.io/type: script
    secretName.params.task.kubevirt.io/type: execute-in-vm-secret
    stop.params.task.kubevirt.io/type: boolean
    task.kubevirt.io/associatedServiceAccount: cleanup-vm-task
    timeout.params.task.kubevirt.io/type: duration
    vmNamespace.params.task.kubevirt.io/type: namespace
  labels:
    app.kubernetes.io/component: tektonTasks
    app.kubernetes.io/name: tekton-tasks
    task.kubevirt.io/category: execute-in-vm
    task.kubevirt.io/type: cleanup-vm
    tekton-tasks.kubevirt.io/version: v0.15.1
  name: cleanup-vm
spec:
  params:
  - description: Name of a VM to execute the action in.
    name: vmName
    type: string
  - default: ""
    description: Namespace of a VM to execute the action in. (defaults to active namespace)
    name: vmNamespace
    type: string
  - default: "true"
    description: Stops the VM after executing the commands when set to true.
    name: stop
    type: string
  - default: "false"
    description: Deletes the VM after executing the commands when set to true.
    name: delete
    type: string
  - default: 30m
    description: Timeout for the command/script (includes potential VM start). The
      VM will be stopped or deleted accordingly once the timout expires. Should be
      in a 3h2m1s format.
    name: timeout
    type: string
  - default: __empty__
    description: Secret to use when connecting to a VM.
    name: secretName
    type: string
  - default: []
    description: Command to execute in a VM.
    name: command
    type: array
  - default: []
    description: Arguments of a command.
    name: args
    type: array
  - default: ""
    description: Script to execute in a VM.
    name: script
    type: string
  steps:
  - args:
    - --stop
    - $(params.stop)
    - --delete
    - $(params.delete)
    - --timeout
    - $(params.timeout)
    - --
    - $(params.command)
    - $(params.args)
    command:
    - entrypoint
    computeResources: {}
    env:
    - name: COMMAND
      value: execute-in-vm
    - name: VM_NAME
      value: $(params.vmName)
    - name: VM_NAMESPACE
      value: $(params.vmNamespace)
    - name: EXECUTE_SCRIPT
      value: $(params.script)
    - name: CONNECTION_SECRET_NAME
      value: $(params.secretName)
    image: registry.redhat.io/container-native-virtualization/kubevirt-tekton-tasks-create-datavolume-rhel9:v4.14
    name: execute-in-vm
    volumeMounts:
    - mountPath: /data/connectionsecret/
      name: connectionsecret
      readOnly: true
  volumes:
  - name: connectionsecret
    secret:
      optional: true
      secretName: $(params.secretName)
