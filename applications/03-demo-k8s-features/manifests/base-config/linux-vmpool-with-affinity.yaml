apiVersion: pool.kubevirt.io/v1alpha1
kind: VirtualMachinePool
metadata:
  name: vmpool-linux
  namespace: demo-k8s-features
  annotations:
    argocd.argoproj.io/sync-wave: "10"
spec:
  replicas: 2
  selector:
    matchLabels:
      kubevirt.io/vmpool: vmpool-linux
  virtualMachineTemplate:
    metadata:
      name: linux-demo-vm
      labels:
        app: demo-k8s-features
        kubevirt.io/vmpool: vmpool-linux
        app.kubernetes.io/part-of: vmpool-linux
    spec:
      dataVolumeTemplates:
        - apiVersion: cdi.kubevirt.io/v1beta1
          kind: DataVolume
          metadata:
            name: linux-demo-vm
          spec:
            sourceRef:
              kind: DataSource
              name: fedora
              namespace: openshift-virtualization-os-images
            storage:
              resources:
                requests:
                  storage: 30Gi
      running: true
      template:
        metadata:
          annotations:
            vm.kubevirt.io/flavor: small
            vm.kubevirt.io/os: fedora
            vm.kubevirt.io/workload: server
          labels:
            kubevirt.io/domain: linux-demo-vm
            kubevirt.io/size: small
            kubevirt.io/vmpool: vmpool-linux
            app.kubernetes.io/part-of: vmpool-linux
            app: demo-k8s-features
        spec:
          affinity:
            nodeAffinity: #This rule ensures the VMs must ONLY be placed on nodes where the key performance contains the value high
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: performance
                        operator: In
                        values:
                          - high
            podAntiAffinity: #This rule ensures that two VMs with the key app.kubernetes.io/part-of equals to vmpool-linux cannot run on the same zone
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app.kubernetes.io/part-of
                          operator: In
                          values:
                            - vmpool-linux
                    topologyKey: topology.kubernetes.io/zone
          architecture: amd64
          domain:
            cpu:
              cores: 1
              sockets: 1
              threads: 1
            devices:
              disks:
                - disk:
                    bus: virtio
                  name: rootdisk
                - disk:
                    bus: virtio
                  name: cloudinitdisk
                - disk: {}
                  name: nginx-conf-disk
                  serial: 34DEMO
              interfaces:
                - masquerade: {}
                  model: virtio
                  name: default
              networkInterfaceMultiqueue: true
              rng: {}
            features:
              acpi: {}
              smm:
                enabled: true
            firmware:
              bootloader:
                efi: {}
            machine:
              type: pc-q35-rhel9.2.0
            memory:
              guest: 2Gi
            resources:
              requests:
                memory: 2Gi
                cpu: 1
          networks:
            - name: default
              pod: {}
          terminationGracePeriodSeconds: 180
          volumes:
            - dataVolume:
                name: linux-demo-vm
              name: rootdisk
            - configMap:
                name: nginx-conf
              name: nginx-conf-disk
            - cloudInitNoCloud:
                userData: |
                  #cloud-config
                  user: fedora
                  password: fedora
                  chpasswd:
                    expire: false
                  bootcmd:
                    # mount the ConfigMap
                    - "mkdir /mnt/app-config"
                    - "mount /dev/disk/by-id/ata-QEMU_HARDDISK_34DEMO /mnt/app-config"
                  packages:
                    - nginx
                  runcmd:
                    - rm -f /etc/nginx/conf.d/*
                    - cp /mnt/app-config/hello.conf /etc/nginx/conf.d/
                    - cp /mnt/app-config/index.html /usr/share/nginx/html/
                    - systemctl enable --now nginx
              name: cloudinitdisk
